---
import type { HTMLAttributes } from "astro/types";

interface Props extends HTMLAttributes<"a"> {
  cls?: string;
  kind?: "isActive" | "isActive2";
}

const { href, ...extraProps } = Astro.props;
const { pathname: currentRoute } = Astro.url;
const { cls, kind = "isActive" } = Astro.props;
const isActive = currentRoute === href;
---

<a
  class:list={[
    cls,
    {
      isActive: kind == "isActive" && isActive,
      isActive2: kind == "isActive2" && isActive,
    },
  ]}
  {...extraProps}
  href={href}
>
  <slot />
</a>

<style>
  a {
    color: inherit;
    border-radius: var(--sm);

    white-space: nowrap; /* Evita que el texto haga varias l√≠neas */
    overflow: hidden; /* Oculta el texto que se desborda */
    text-overflow: ellipsis; /* Muestra los "..." cuando el texto se corta */
  }

  .isActive {
  }

  .isActive2 {
  }
</style>
