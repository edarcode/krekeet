---
import type { HTMLAttributes } from "astro/types";
import Btn from "../../../buttons/Btn/Btn.astro";
import { COUNTRY_CODE } from "./countryCode";
import { SERVICES } from "./services";

interface Props extends HTMLAttributes<"form"> {
  cls?: string;
}

const { cls } = Astro.props;
---

<form class:list={[cls]} id="contactForm">
  <label>
    <div>Nombre:</div>
    <input type="text" name="name" />
  </label>

  <label>
    <div>Email:</div>
    <input type="email" name="email" />
  </label>

  <label for="tel" class="wrapper_tel">
    <div>NÃºmero:</div>
    <div>
      <select name="countryCode">
        {
          COUNTRY_CODE.map((code) => (
            <option value={code.value}>{code.display}</option>
          ))
        }
      </select>
      <input id="tel" type="number" name="tel" />
    </div>
  </label>

  <label class="wrapper_serv">
    <div>Servicio:</div>
    <select name="serv">
      {
        SERVICES.map((serv) => (
          <option value={serv.value}>{serv.display}</option>
        ))
      }
    </select>
  </label>

  <label class="wrapper_msg">
    <div>Mensaje:</div>
    <textarea name="msg"></textarea>
  </label>

  <Btn>Enviar</Btn>
</form>

<script>
  import { sendMail } from "../../../../service/sendMail";

  const form = document.querySelector("#contactForm") as HTMLElement;
  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    const target = e.target as HTMLFormElement;
    const form = new FormData(target);

    const name = form.get("name");
    const email = form.get("email");
    const countryCode = form.get("countryCode");
    const num = form.get("num");
    const serv = form.get("serv");
    const msg = form.get("msg");

    // const allData = {
    //   name,
    //   email,
    //   countryCode,
    //   num,
    //   serv,
    //   msg,
    // };

    console.log(await sendMail(email as string, msg as string));
  });
</script>

<style>
  input,
  select,
  textarea {
    border: none;
    padding: 5px;
    width: 100%;
    min-height: 51px;
    border-radius: 5px;
  }

  input {
  }

  textarea {
    min-height: 128px;
  }

  form {
    padding: var(--xl);
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: var(--xl);
    align-items: center;

    .wrapper_tel {
      div {
        display: grid;
        grid-template-columns: auto 1fr;

        select {
          border-radius: 5px 0 0 5px;
        }

        input {
          border-radius: 0 5px 5px 0;
        }
      }
    }

    .wrapper_msg {
      grid-column: span 2;
    }

    button {
      justify-self: end;
      grid-column: span 2;
      min-width: 250px;
    }

    @media (max-width: 768px) {
      grid-template-columns: 1fr;
      max-width: 90%;
      margin-left: auto;
      margin-right: auto;

      .wrapper_msg,
      button {
        grid-column: span 1;
      }
    }
  }
</style>
